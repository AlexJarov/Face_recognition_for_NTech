Для обучения нейросети были взяты из предоставленного набора данных 10010 фотографий мужчин и 10010 фотографий женщин. 75% из них использовано непосредственно для обучения, 25% - для контроля результатов.
Нейросеть построена при помощи функций Tensorflow и Keras, так же понадобятся библиотеки cv2, imutils, argparse, os, numpy, scipy и sklearn. В качестве архитектуры нейросети используется MiniVGGNet – архитектура семейства VGG, созданного K. Simonyan и A. Zisserman, модифицированная A. Rosebrock и включающая только четыре свёрточных слоя. Были заданы следующие параметры оптимизации:
Learning rate = 0.01
Decay = 0.0025
Momentum = 0.9
Так же задействовались ускоренный градиент Нестерова и оптимизатор Adam.
Данные были приведены к общему виду — чёрно-белому изображению 28 на 28 пикселей — и подавались батчами по 64 в течении пятнадцати эпох.
В итоге удалось достигнуть точности распознавания 94%, как следует из автоматического отчёта обучения:
              precision    recall  f1-score   support

      female       0.95      0.92      0.94      2502
        male       0.93      0.95      0.94      2503

    accuracy                           0.94      5005
   macro avg       0.94      0.94      0.94      5005
weighted avg       0.94      0.94      0.94      5005
При этом обученная нейросеть весит всего 13 КБ и пригодна для обучения и использования на слабых компьютерах без видеокарты.

Инструкция для запуска тренировки.

Запустить скрипт m_vgg.py через командную строку:
python m_vgg.py -d путь к папке, содержащей тренировочный набор данных -m полное имя обучаемой нейросети
Например, если папка data с данными находится в одной директории со скриптом, куда так же записывается обученная нейросеть:
python m_vgg.py -d data -mmvgg.hdf5

Инструкция для запуска нейросети.

Предупреждение: анализируемые изображения должны включать в себя только человеческие лица и как можно меньше фона.
Запустить скрипт apply_nn.py через командную строку:
python apply_nn.py -d путь к папке, содержащей проверяемый набор данных -m полное имя анализирующей нейросети
Например, если папка data с данными находится в одной директории со скриптом, где так же находится анализирующая нейросеть:
python apply_nn.py -d data -m mvgg.hdf5
Файл с данными анализа process_results.json записывается в ту же директорию, где находится скрипт пуска нейросети.
